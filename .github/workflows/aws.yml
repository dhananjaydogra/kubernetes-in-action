# 1. Push Docker images to an ECR repository

name: Push to Amazon ECR

on:
  push:
    branches: [master]

jobs:
  
  build:
    name: Build the Docker Image
    runs-on: ubuntu-latest
   #environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}             # set this to your AWS_ACCESS_KEY_ID secret key in git 
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     # set this to your AWS_SECRET_ACCESS_KEY secret key in git 
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}             # set this to your AWS_SESSION_TOKEN secret key in git 
        AWS_REGION: us-east-1
        
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REPOSITORY: ddecr-test           # set this to your Amazon ECR repository name
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #IMAGE_TAG: v0.1                              
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG_DOGS: ${{ github.sha }} 
        
      run: |
        #### Build a docker container for Cats  push it to ECR
        #cd cats/
        cd Chapter02/kubia/
        ls -ltra
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:CATS_$IMAGE_TAG .
        ### Build a docker container for Dogs
        #cd ../dogs/
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:DOGS_$IMAGE_TAG .
        # Unit test
        docker run -d -p 80:8080 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker run -d -p 80:8080 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        curl localhost  -vvv         
        #docker run -d -p 8081:80 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:DOGS_$IMAGE_TAG
        #docker ps
        #echo "Pause for 10 seconds to let container start"
        #sleep 10
        #curl localhost:8081 -vvv           
                                                                                        
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:CATS_$IMAGE_TAG
        #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:CATS_$IMAGE_TAG"

